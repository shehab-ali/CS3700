#!/usr/bin/env python3


import json
import socket
import argparse
import ssl

# 
parser = argparse.ArgumentParser(
    usage='./client <-p port> <-s> <hostname> <Northeastern-username>')
parser.add_argument('-p', type=int, required=False,
                    help='specifies the TCP port that the server is listening on', dest='port')
parser.add_argument('-s', action='store_true', required=False,
                    help='use an TLS encrypted socket connection', dest='ssl_true')
parser.add_argument('hostname', type=str,
                    help='specifies the name of the server (either a DNS name or an IP address in dotted notation)')
parser.add_argument('username', type=str, help='Northeastern-username')
args = parser.parse_args()


# initialize port from arguments
PORT = None
if args.port is not None :
    PORT = args.port
elif args.ssl_true :
    PORT = 27994
else :
    PORT = 27993

# initialize host from arguments
HOST = None
if args.hostname is not None :
    HOST = args.hostname
else :
    HOST = "proj1.3700.network" 

# initialize username from arguments
username = str(args.username)

IP = socket.gethostbyname(HOST)

# sets up the client
client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
client.connect((HOST, PORT))


# for TLS encrypted socket connections
if args.ssl_true:
    client = ssl.wrap_socket(client)

 
# send first mesage and save the id from the server 
msg = '{"type": "hello", "northeastern_username": "'+ username +'"}\n'
client.send(msg.encode())
id = json.loads(str(client.recv(10000))[2:-3])['id']

# makes the words file into a txt file for easier travesing
my_file = open("words.txt", "r")
data = my_file.read()
current_list = data.replace('\n', ' ').split(" ")
my_file.close()

# the best guess a person can start with for wordle
current_list.remove('crane')
current_list.insert(0, 'crane')

# function to guess a word and send it to the server
def attempt(word) :
    word = '"' + word + '"'
    msg = '{"type": "guess", "id": "' + id + '", "word": ' + word + ' }\n'
    client.send(msg.encode())
    res = str(client.recv(10000))
    return res


# function to interpret the message from the server
def interpret(inp) :
    inp = inp[2:-3]
    inp = json.loads(inp)

    if inp['type'] == 'bye' :
        print(inp['flag'])
        return 1
    elif inp['type'] == 'error' :
        print(inp)
        return -1
    return inp['guesses'][-1]['marks']

# function to verify that all letters in lets are in word
def all_lets(lets, word) :
    n = len(lets)
    counter = 0
    for let in lets :
        if let in word :
            counter += 1
    return counter == n

# function to verify that all letters in sol are in word at the correct index
def all_sol(sol, word) :
    for i in range(len(sol)) :
        if sol[i] and sol[i] != word[i]:
            return False
    return True


# solves the wordle
def wordle_solver() :
    sol = [''] * 5
    lets_in_word = []

    for word in current_list :
        if all_lets(lets_in_word, word) and all_sol(sol, word):
            res = attempt(word)
            res = interpret(res)

            if res == 1 :
                return word

            for i in range(len(res)) :
                if res[i] == 2 :
                    sol[i] = word[i]
                elif res[i] == 1 :
                    lets_in_word.append(word[i])
    



wordle_solver()
